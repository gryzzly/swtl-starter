{
  "version": 3,
  "sources": ["../node_modules/swtl/symbol.js", "../node_modules/swtl/html.js", "../node_modules/swtl/await.js", "../node_modules/swtl/render.js", "../node_modules/swtl/router.js", "../src/pages/Html.js", "../src/sw.js"],
  "sourcesContent": ["export const COMPONENT_SYMBOL = Symbol('component');\nexport const AWAIT_SYMBOL = Symbol('await');", "import { COMPONENT_SYMBOL } from './symbol.js';\n\nconst TEXT = 'TEXT';\nconst COMPONENT = 'COMPONENT';\n\nconst NONE = 'NONE';\nconst PROP = 'PROP';\nconst CHILDREN = 'CHILDREN';\n\nconst SET_PROP = 'SET_PROP';\nconst PROP_VAL = 'PROP_VAL';\n\nexport function* html(statics, ...dynamics) {\n  /**\n   * If no dynamics, just return statics\n   */\n  if (!dynamics.length) {\n    yield* statics;\n  /**\n   * If no Components, just stitch statics and dynamics together\n   */\n  } else if (!dynamics.some(d => typeof d === 'function')) {\n    yield* statics.reduce((acc, s, i) => [...acc, s, ...(dynamics.length > i ? [dynamics[i]] : [])], []);\n  } else {\n    let MODE = TEXT;\n    let COMPONENT_MODE = NONE;\n    let PROP_MODE = NONE;\n  \n    const componentStack = [];\n  \n    /**\n     * @example\n     * source        = html`<h1>${1}</h1>`\n     * statics       = ['<h1>','</h1>'], \n     * dynamics      = [1]\n     */\n    for (let i = 0; i < statics.length; i++) {\n      let result = \"\";\n      const component = {\n        kind: COMPONENT_SYMBOL,\n        properties: [],\n        children: [],\n        fn: undefined,\n      };\n  \n      /**\n       * @example\n       * source        = html`<h1>${1}</h1>`\n       * statics       = ['<h1>','</h1>'], \n       * dynamics      = [1]\n       * \n       * statics[i]    = '<h1>'\n       * statics[i][j] = '<'\n       */\n      for (let j = 0; j < statics[i].length; j++) {\n        let c = statics[i][j];\n        if (MODE === TEXT) {\n          if (\n            c === \"<\" &&\n            /**\n             * @example <${Foo}>\n             *           ^\n             */\n            !statics[i][j + 1] && typeof dynamics[i] === \"function\"\n          ) {\n            MODE = COMPONENT;\n            component.fn = dynamics[i];\n            componentStack.push(component);\n          } else {\n            result += c;\n          }\n        } else if (MODE === COMPONENT) {\n          if (COMPONENT_MODE === PROP) {\n            const component = componentStack[componentStack.length - 1];\n            const property = component?.properties[component.properties.length - 1];\n            if (PROP_MODE === SET_PROP) {\n              let property = \"\";\n              while (\n                statics[i][j] !== \"=\" &&\n                statics[i][j] !== \"/\" &&\n                statics[i][j] !== \">\" &&\n                statics[i][j] !== '\"' &&\n                statics[i][j] !== \"'\" &&\n                statics[i][j] !== \" \" &&\n                property !== '...'\n              ) {\n                property += statics[i][j];\n                j++;\n              }\n  \n              /**\n               * @example <${Foo} foo=\"bar\">\n               *                     ^\n               */\n              if (statics[i][j] === \"=\") {\n                PROP_MODE = PROP_VAL;\n                /**\n                 * @example <${Foo} foo/>\n                 *                     ^\n                 */\n              } else if (statics[i][j] === \"/\" && COMPONENT_MODE === PROP) {\n                COMPONENT_MODE = NONE;\n                PROP_MODE = NONE;\n                const component = componentStack.pop();\n                if (!componentStack.length) {\n                  result = '';\n                  yield component;\n                }\n                /**\n                 * @example <${Foo} foo>children</a>\n                 *                     ^\n                 */\n              } else if (statics[i][j] === \">\" && COMPONENT_MODE === PROP) {\n                COMPONENT_MODE = CHILDREN;\n                PROP_MODE = NONE;\n              }\n  \n              if (property === '...') {\n                component.properties.push(...Object.entries(dynamics[i]).map(([name,value])=> ({name, value})));\n              } else if (property) {\n                component.properties.push({name: property, value: true});\n              }\n            } else if (PROP_MODE === PROP_VAL) {\n              /**\n               * @example <${Foo} bar='hi'>\n               *                      ^\n               * @example <${Foo} bar='${1}'>\n               *                      ^\n               * @example <${Foo} bar=\"hi\">\n               *                      ^\n               * @example <${Foo} bar=\"${1}\">\n               *                      ^\n               */\n              if (statics[i][j] === '\"' || statics[i][j] === \"'\") {\n                const quote = statics[i][j];\n                /**\n                 * @example <${Foo} bar=\"${1}\">\n                 *                       ^^^^\n                 */\n                if (!statics[i][j + 1]) {\n                  property.value = dynamics[i];\n                  PROP_MODE = SET_PROP;\n                } else {\n                  /**\n                   * @example <${Foo} bar=\"hi\">\n                   *                       ^^\n                   * @example <${Foo} bar='hi'>\n                   *                       ^^\n                   */\n                  let val = '';\n                  j++; // account for quote\n                  while(statics[i][j] !== quote) {\n                    val += statics[i][j];\n                    j++;\n                  }\n  \n                  property.value = val || '';\n                  PROP_MODE = SET_PROP;\n                }\n                /**\n                 * @example <${Foo} bar=${1}>\n                 *                          ^\n                 */\n              } else if (!statics[i][j - 1]) {\n                property.value = dynamics[i - 1];\n                PROP_MODE = SET_PROP;\n\n                if(statics[i][j] === '>') {\n                  PROP_MODE = NONE;\n                  COMPONENT_MODE = CHILDREN;\n                  /**\n                   * @example <${Foo} bar=${1}/>\n                   *                          ^\n                   * Yield if we finished the component\n                   */\n                } else if (statics[i][j] === '/') {\n                  const component = componentStack.pop();\n                  if (!componentStack.length) {\n                    PROP_MODE = NONE;\n                    COMPONENT_MODE = NONE;\n                    MODE = TEXT;\n                    j++;\n                    yield component;\n                  }\n                }\n              } else {\n                /**\n                 * @example <${Foo} bar=hi>\n                 *                        ^\n                 * @example <${Foo} bar=hi/>\n                 *                        ^\n                 * @example <${Foo} bar=hi baz>\n                 *                        ^\n                 */\n                let val = '';\n                while(\n                  statics[i][j] !== ' ' &&\n                  statics[i][j] !== '/' &&\n                  statics[i][j] !== '>'\n                ) {\n                  val += statics[i][j];\n                  j++;\n                }\n  \n                property.value = val || '';\n                PROP_MODE = SET_PROP;\n  \n                /**\n                 * @example <${Foo} bar=hi/>\n                 *                        ^\n                 * Yield if we finished the component\n                 */\n                if (statics[i][j] === '/') {\n                  const component = componentStack.pop();\n                  if (!componentStack.length) {\n                    yield component;\n                  }\n                }\n              }\n            }\n          } else if (COMPONENT_MODE === CHILDREN) {\n            const currentComponent = componentStack[componentStack.length - 1];\n  \n            /**\n             * @example <${Foo}>children<//>\n             *                           ^^\n             */\n            if (statics[i][j + 1] === \"/\" && statics[i][j + 2] === \"/\") {\n              if (result) {\n                currentComponent.children.push(result);\n                result = '';\n              }\n  \n              j += 3;\n              /**\n               * If there are no components on the stack, this is a top level\n               * component, and we can yield\n               */\n              const component = componentStack.pop();\n              if (!componentStack.length) {\n                MODE = TEXT;\n                COMPONENT_MODE = NONE;\n                yield component;\n              }\n            } else if (statics[i][j] === '<' && !statics[i][j + 1] && typeof dynamics[i] === 'function') {\n              /**\n               * If the next child is a component, we need to push to children what we have\n               */\n              if (result) {\n                currentComponent.children.push(result);\n                result = '';\n              }\n              COMPONENT_MODE = PROP;\n              PROP_MODE = SET_PROP;\n              component.fn = dynamics[i];\n              componentStack.push(component);\n            } else if (!statics[i][j+1]) {\n              /**\n               * @example <${Foo}><h1>hi ${2}</h1><//>\n               *                  ^^^^^^^       \n               */\n              if(result && currentComponent) {\n                result += statics[i][j];\n                currentComponent.children.push(result);\n              }\n            } else {\n              result += statics[i][j];\n            }\n  \n          } else if (c === \">\") {\n            COMPONENT_MODE = CHILDREN;\n          } else if (c === \" \") {\n            COMPONENT_MODE = PROP;\n            PROP_MODE = SET_PROP;\n            /** self closing tag */\n          } else if (c === \"/\" && statics[i][j + 1] === \">\") {\n            MODE = TEXT;\n            COMPONENT_MODE = NONE;\n            /**\n             * If there are no components on the stack, this is a top level\n             * component, and we can yield\n             */\n            const component = componentStack.pop();\n            if (!componentStack.length) {\n              result = '';\n              yield component;\n            }\n            j++;\n          } else {\n            result += c;\n          }\n        } else {\n          result += c;\n        }\n      }\n  \n      if(COMPONENT_MODE === CHILDREN && dynamics.length > i) {\n        const currentComponent = componentStack[componentStack.length - 1];\n        currentComponent.children.push(dynamics[i]);\n      }\n\n      if (result && COMPONENT_MODE !== CHILDREN) {\n        yield result;\n      }\n  \n      if (componentStack.length > 1 && component.fn) {\n        componentStack[componentStack.length - 2].children.push(component)\n      }\n  \n      // We're at the end of statics, now process dynamics if there are any\n      if (dynamics.length > i && MODE !== COMPONENT) {\n        yield dynamics[i];\n      }\n    }\n  }\n}", "import { AWAIT_SYMBOL } from './symbol.js';\n\nfunction Await({promise, children}) {\n  return { \n    promise, \n    template: children.find(c => typeof c === 'function')\n  };\n}\n\nAwait.kind = AWAIT_SYMBOL;\n\nconst when = (condition, template) => condition ? template() : '';\n\nexport { Await, when };", "import { html } from './html.js';\nimport { AWAIT_SYMBOL, COMPONENT_SYMBOL } from \"./symbol.js\";\n\nfunction hasGetReader(obj) {\n  return typeof obj.getReader === \"function\";\n}\n\nexport async function* streamAsyncIterator(stream) {\n  const reader = stream.getReader();\n  const decoder = new TextDecoder(\"utf-8\");\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) return;\n      yield decoder.decode(value);\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nasync function* handleIterator(iterable) {\n  if (hasGetReader(iterable)) {\n    for await (const chunk of streamAsyncIterator(iterable)) {\n      yield chunk;\n    }\n  } else {\n    for await (const chunk of iterable) {\n      yield chunk;\n    }\n  }\n}\n\nexport async function* handle(chunk, promises) {\n  if (typeof chunk === \"string\") {\n    yield chunk;\n  } else if (typeof chunk === \"function\") {\n    yield* handle(chunk(), promises);\n  } else if (Array.isArray(chunk)) {\n    yield* _render(chunk, promises);\n  } else if (typeof chunk?.then === \"function\") {\n    const v = await chunk;\n    yield* handle(v, promises);\n  } else if (chunk instanceof Response && chunk.body) {\n    yield* handleIterator(chunk.body);\n  } else if (chunk?.[Symbol.asyncIterator] || chunk?.[Symbol.iterator]) {\n    yield* _render(chunk, promises);\n  } else if (chunk?.fn?.kind === AWAIT_SYMBOL) {\n    const { promise, template } = chunk.fn({\n      ...chunk.properties.reduce((acc, prop) => ({...acc, [prop.name]: prop.value}), {}),\n      children: chunk.children,\n    });\n    const id = promises.length;\n    promises.push(\n      promise()\n        .then(data => ({\n          id,\n          template: template({pending: false, error: false, success: true}, data, null) \n        }))\n        .catch(error => {\n          console.error(error.stack);\n          return {\n            id,\n            template: template({pending: false, error: true, success: false}, null, error) \n          }\n        })\n    );\n    yield* _render(html`<awaiting-promise style=\"display: contents;\" data-id=\"${id.toString()}\">${template({pending: true, error: false, success: false}, null, null)}</awaiting-promise>`, promises);\n  } else if (chunk?.kind === COMPONENT_SYMBOL) {\n    yield* _render(\n      await chunk.fn({\n        ...chunk.properties.reduce((acc, prop) => ({...acc, [prop.name]: prop.value}), {}),\n        children: chunk.children,\n      }),\n      promises\n    );\n  } else {\n    yield chunk?.toString();\n  }\n}\n\nasync function* _render(template, promises) {\n  for await (const chunk of template) {\n    yield* handle(chunk, promises);\n  }\n}\n\nexport async function* render(template) {\n  let promises = [];\n\n  yield* _render(template, promises);\n\n  promises = promises.map(promise => {\n    let p = promise.then(val => {\n      promises.splice(promises.indexOf(p), 1);\n      return val;\n    });\n    return p;\n  });\n\n  while (promises.length > 0) {\n    const nextPromise =  await Promise.race(promises);\n    const { id, template } = nextPromise;\n\n    yield* render(html`\n      <template data-id=\"${id.toString()}\">${template}</template>\n      <script>\n        {\n          let toReplace = document.querySelector('awaiting-promise[data-id=\"${id.toString()}\"]');\n          const template = document.querySelector('template[data-id=\"${id.toString()}\"]').content.cloneNode(true);\n          toReplace.replaceWith(template);\n        }\n      </script>\n    `)\n  }\n}\n\nexport async function renderToString(renderResult) {\n  let result = \"\";\n\n  for await (const chunk of render(renderResult)) {\n    result += chunk;\n  }\n\n  return result;\n}\n", "import { render } from './render.js';\n\nexport class Router {\n  constructor({ \n    routes, \n    fallback, \n    plugins = [], \n    baseHref = '' \n  }) {\n    this.plugins = plugins;\n    this.fallback = {\n      render: fallback,\n      params: {}\n    };\n    this.routes = routes.map(route => ({\n      ...route,\n      urlPattern: new URLPattern({\n        pathname: `${baseHref}${route.path}`,\n        search: '*',\n        hash: '*',\n      })\n    }));\n  }\n\n  _getPlugins(route) {\n    return [\n      ...(this.plugins ?? []), \n      ...(route?.plugins ?? []),\n    ]\n  }\n\n  async handleRequest(request) {\n    const url = new URL(request.url);\n    let matchedRoute;\n\n    for (const route of this.routes) {\n\n      const match = route.urlPattern.exec(url);\n      if(match) {\n        matchedRoute = {\n          render: route.render,\n          params: match?.pathname?.groups ?? {},\n          plugins: route.plugins,\n        };\n        break;\n      }\n    }\n\n    const route = matchedRoute?.render ?? this?.fallback?.render;\n    if (route) {\n      const query = Object.fromEntries(new URLSearchParams(new URL(request.url).search));\n      const params = matchedRoute?.params;\n\n      const plugins = this._getPlugins(matchedRoute);\n      for (const plugin of plugins) {\n        try {\n          const result = await plugin?.beforeResponse({query, params, request});\n          if (result) {\n            return result;\n          }\n        } catch(e) {\n          console.log(`Plugin \"${plugin.name}\" error on beforeResponse hook`, e);\n          throw e;\n        }\n      }\n\n      return new HtmlResponse(route({query, params, request}));\n    }\n  }\n}\n\nexport class HtmlResponse {\n  constructor(template) {\n    const iterator = render(template);\n    const encoder = new TextEncoder();\n    const stream = new ReadableStream({\n      async pull(controller) {\n        try {\n          const { value, done } = await iterator.next();\n          if (done) {\n            controller.close();\n          } else {\n            controller.enqueue(encoder.encode(value));\n          }\n        } catch(e) {\n          console.error(e.stack);\n          throw e;\n        }\n      }\n    });\n\n    return new Response(stream, { \n      status: 200,\n      headers: { \n        'Content-Type': 'text/html', \n        'Transfer-Encoding': 'chunked', \n      } \n    });\n  }\n}", "import { html } from 'swtl';\n\nexport function Html({children, title, styles = []}) {\n  return html`\n    <html lang=\"en\">\n      <head>\n        <meta name=\"view-transition\" content=\"same-origin\" />\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,viewport-fit=cover\">\n        <meta name=\"Description\" content=\"swtl demo\">\n        <title>${title ?? ''}</title>\n        <style>\n          * {\n            margin: 0;\n            padding: 0;\n            font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif \n          }\n\n          body {\n            background-color: #ececec;\n          }\n        </style>\n        ${styles}\n      </head>\n      <body>\n        <main>\n          ${children}\n        </main>\n        <script>\n          let refreshing;\n          async function handleUpdate() {\n            // check to see if there is a current active service worker\n            const oldSw = (await navigator.serviceWorker.getRegistration())?.active?.state;\n\n            navigator.serviceWorker.addEventListener('controllerchange', async () => {\n              if (refreshing) return;\n\n              // when the controllerchange event has fired, we get the new service worker\n              const newSw = (await navigator.serviceWorker.getRegistration())?.active?.state;\n\n              // if there was already an old activated service worker, and a new activating service worker, do the reload\n              if (oldSw === 'activated' && newSw === 'activating') {\n                refreshing = true;\n                window.location.reload();\n              }\n            });\n          }\n\n          handleUpdate();\n        </script>\n      </body>\n    </html>\n  `\n}\n", "import { html, Router } from 'swtl';\nimport { Html } from './pages/Html.js';\n\nconst router = new Router({\n  routes: [\n    {\n      path: '/',\n      render: ({params, query, request}) => html`\n        <${Html} title=\"swtl\">\n          <h1>Hello world</h1>\n          <a href=\"/foo\">foo</a>\n        <//>\n      `\n    },\n    {\n      path: '/foo',\n      render: ({params, query, request}) => html`\n        <${Html} title=\"foo\">\n          <h2>Foo</h2>\n        <//>\n      `\n    }\n  ],\n});\n\nself.addEventListener(\"install\", () => {\n  self.skipWaiting();\n});\n\nself.addEventListener(\"activate\", (event) => {\n  event.waitUntil(\n    clients.claim().then(() => {\n      self.clients.matchAll().then((clients) => {\n        clients.forEach((client) =>\n          client.postMessage({ type: \"SW_ACTIVATED\" })\n        );\n      });\n    })\n  );\n});\n\nself.addEventListener(\"fetch\", (event) => {\n  if (event.request.mode === \"navigate\") {\n    event.respondWith(router.handleRequest(event.request));\n  }\n});\n\n"],
  "mappings": "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",
  "names": ["COMPONENT_SYMBOL", "AWAIT_SYMBOL", "TEXT", "COMPONENT", "NONE", "PROP", "CHILDREN", "SET_PROP", "PROP_VAL", "html", "statics", "dynamics", "d", "acc", "s", "i", "MODE", "COMPONENT_MODE", "PROP_MODE", "componentStack", "result", "component", "COMPONENT_SYMBOL", "j", "c", "property", "name", "value", "quote", "val", "currentComponent", "Await", "promise", "children", "c", "AWAIT_SYMBOL", "hasGetReader", "obj", "streamAsyncIterator", "stream", "reader", "decoder", "done", "value", "handleIterator", "iterable", "chunk", "handle", "promises", "_render", "v", "AWAIT_SYMBOL", "promise", "template", "acc", "prop", "id", "data", "error", "html", "COMPONENT_SYMBOL", "_a", "render", "p", "val", "nextPromise", "__template", "Router", "routes", "fallback", "plugins", "baseHref", "route", "request", "url", "matchedRoute", "match", "query", "params", "plugin", "result", "e", "HtmlResponse", "template", "iterator", "render", "encoder", "stream", "controller", "value", "done", "_a", "Html", "children", "title", "styles", "html", "__template", "router", "Router", "params", "query", "request", "html", "Html", "event", "clients", "client"]
}
